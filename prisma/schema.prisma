// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
    output   = "../app/generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String       @id @default(uuid())
    name          String
    email         String       @unique
    image         String?
    role          Role
    CreatorSpace  Space[]
    CreatorStream Stream[]
    SpaceUsers    SpaceUsers[]
}

model Space {
    id          String   @id @default(uuid())
    streamerId  String
    Streamer    User     @relation(fields: [streamerId], references: [id])
    createdAt   DateTime @default(now())
    isActive    Boolean  @default(false)
    title       String?
    description String?
    current     Stream[]
}

// This is the smtream which is part of a space and where different users can come and paste the songs
model Stream {
    id          String       @id @default(uuid())
    streamerId  String
    Streamer    User         @relation(fields: [streamerId], references: [id])
    type        StreamType
    active      Boolean      @default(true)
    url         String
    title       String       @default("")
    smallImg    String       @default("")
    bigImg      String       @default("")
    extractedId String
    Space       Space?       @relation(fields: [spaceId], references: [id])
    spaceId     String?
    SpaceUsers  SpaceUsers[]
}

// This stores data for Users inside a particular stream
model SpaceUsers {
    id         String  @id @default(uuid())
    userId     String
    user       User    @relation(fields: [userId], references: [id])
    haveVoted  Boolean @default(false)
    streamerId String
    streamer   Stream  @relation(fields: [streamerId], references: [id])

    @@unique([streamerId, userId])
}

enum StreamType {
    Youtube
    Spotify
}

enum Role {
    Streamer
    EndUser
}
